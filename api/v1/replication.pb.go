// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v6.31.1
// source: api/v1/replication.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReportProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The sequence number that the follower has successfully applied.
	AppliedSequenceNumber uint64 `protobuf:"varint,1,opt,name=applied_sequence_number,json=appliedSequenceNumber,proto3" json:"applied_sequence_number,omitempty"`
}

func (x *ReportProgressRequest) Reset() {
	*x = ReportProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_replication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportProgressRequest) ProtoMessage() {}

func (x *ReportProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_replication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportProgressRequest.ProtoReflect.Descriptor instead.
func (*ReportProgressRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_replication_proto_rawDescGZIP(), []int{0}
}

func (x *ReportProgressRequest) GetAppliedSequenceNumber() uint64 {
	if x != nil {
		return x.AppliedSequenceNumber
	}
	return 0
}

type StreamWALRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The sequence number from which the follower wants to start streaming.
	FromSequenceNumber uint64 `protobuf:"varint,1,opt,name=from_sequence_number,json=fromSequenceNumber,proto3" json:"from_sequence_number,omitempty"`
}

func (x *StreamWALRequest) Reset() {
	*x = StreamWALRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_replication_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamWALRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWALRequest) ProtoMessage() {}

func (x *StreamWALRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_replication_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWALRequest.ProtoReflect.Descriptor instead.
func (*StreamWALRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_replication_proto_rawDescGZIP(), []int{1}
}

func (x *StreamWALRequest) GetFromSequenceNumber() uint64 {
	if x != nil {
		return x.FromSequenceNumber
	}
	return 0
}

type LatestStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestSequenceNumber  uint64 `protobuf:"varint,1,opt,name=latest_sequence_number,json=latestSequenceNumber,proto3" json:"latest_sequence_number,omitempty"`
	LatestWalSegmentIndex uint64 `protobuf:"varint,2,opt,name=latest_wal_segment_index,json=latestWalSegmentIndex,proto3" json:"latest_wal_segment_index,omitempty"`
}

func (x *LatestStateResponse) Reset() {
	*x = LatestStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_replication_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestStateResponse) ProtoMessage() {}

func (x *LatestStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_replication_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestStateResponse.ProtoReflect.Descriptor instead.
func (*LatestStateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_replication_proto_rawDescGZIP(), []int{2}
}

func (x *LatestStateResponse) GetLatestSequenceNumber() uint64 {
	if x != nil {
		return x.LatestSequenceNumber
	}
	return 0
}

func (x *LatestStateResponse) GetLatestWalSegmentIndex() uint64 {
	if x != nil {
		return x.LatestWalSegmentIndex
	}
	return 0
}

type WALEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber  uint64 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	WalSegmentIndex uint64 `protobuf:"varint,2,opt,name=wal_segment_index,json=walSegmentIndex,proto3" json:"wal_segment_index,omitempty"` // Follower needs this for its own checkpointing
	// Types that are assignable to Payload:
	//	*WALEntry_PutEvent
	//	*WALEntry_DeleteEvent
	//	*WALEntry_DeleteSeriesEvent
	//	*WALEntry_DeleteRangeEvent
	Payload isWALEntry_Payload `protobuf_oneof:"payload"`
}

func (x *WALEntry) Reset() {
	*x = WALEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_replication_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WALEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALEntry) ProtoMessage() {}

func (x *WALEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_replication_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALEntry.ProtoReflect.Descriptor instead.
func (*WALEntry) Descriptor() ([]byte, []int) {
	return file_api_v1_replication_proto_rawDescGZIP(), []int{3}
}

func (x *WALEntry) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *WALEntry) GetWalSegmentIndex() uint64 {
	if x != nil {
		return x.WalSegmentIndex
	}
	return 0
}

func (m *WALEntry) GetPayload() isWALEntry_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *WALEntry) GetPutEvent() *PutEvent {
	if x, ok := x.GetPayload().(*WALEntry_PutEvent); ok {
		return x.PutEvent
	}
	return nil
}

func (x *WALEntry) GetDeleteEvent() *DeleteEvent {
	if x, ok := x.GetPayload().(*WALEntry_DeleteEvent); ok {
		return x.DeleteEvent
	}
	return nil
}

func (x *WALEntry) GetDeleteSeriesEvent() *DeleteSeriesEvent {
	if x, ok := x.GetPayload().(*WALEntry_DeleteSeriesEvent); ok {
		return x.DeleteSeriesEvent
	}
	return nil
}

func (x *WALEntry) GetDeleteRangeEvent() *DeleteRangeEvent {
	if x, ok := x.GetPayload().(*WALEntry_DeleteRangeEvent); ok {
		return x.DeleteRangeEvent
	}
	return nil
}

type isWALEntry_Payload interface {
	isWALEntry_Payload()
}

type WALEntry_PutEvent struct {
	PutEvent *PutEvent `protobuf:"bytes,3,opt,name=put_event,json=putEvent,proto3,oneof"`
}

type WALEntry_DeleteEvent struct {
	DeleteEvent *DeleteEvent `protobuf:"bytes,4,opt,name=delete_event,json=deleteEvent,proto3,oneof"`
}

type WALEntry_DeleteSeriesEvent struct {
	DeleteSeriesEvent *DeleteSeriesEvent `protobuf:"bytes,5,opt,name=delete_series_event,json=deleteSeriesEvent,proto3,oneof"`
}

type WALEntry_DeleteRangeEvent struct {
	DeleteRangeEvent *DeleteRangeEvent `protobuf:"bytes,6,opt,name=delete_range_event,json=deleteRangeEvent,proto3,oneof"`
}

func (*WALEntry_PutEvent) isWALEntry_Payload() {}

func (*WALEntry_DeleteEvent) isWALEntry_Payload() {}

func (*WALEntry_DeleteSeriesEvent) isWALEntry_Payload() {}

func (*WALEntry_DeleteRangeEvent) isWALEntry_Payload() {}

type PutEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Encoded FieldValues
	// The following fields are added to allow a follower to reconstruct its own
	// metadata (string/series stores) without needing to query the leader.
	Metric    string            `protobuf:"bytes,3,opt,name=metric,proto3" json:"metric,omitempty"`
	Tags      map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timestamp int64             `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *PutEvent) Reset() {
	*x = PutEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_replication_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutEvent) ProtoMessage() {}

func (x *PutEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_replication_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutEvent.ProtoReflect.Descriptor instead.
func (*PutEvent) Descriptor() ([]byte, []int) {
	return file_api_v1_replication_proto_rawDescGZIP(), []int{4}
}

func (x *PutEvent) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PutEvent) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PutEvent) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *PutEvent) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PutEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type DeleteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteEvent) Reset() {
	*x = DeleteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_replication_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEvent) ProtoMessage() {}

func (x *DeleteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_replication_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEvent.ProtoReflect.Descriptor instead.
func (*DeleteEvent) Descriptor() ([]byte, []int) {
	return file_api_v1_replication_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteEvent) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DeleteSeriesEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyPrefix []byte `protobuf:"bytes,1,opt,name=key_prefix,json=keyPrefix,proto3" json:"key_prefix,omitempty"`
}

func (x *DeleteSeriesEvent) Reset() {
	*x = DeleteSeriesEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_replication_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSeriesEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSeriesEvent) ProtoMessage() {}

func (x *DeleteSeriesEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_replication_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSeriesEvent.ProtoReflect.Descriptor instead.
func (*DeleteSeriesEvent) Descriptor() ([]byte, []int) {
	return file_api_v1_replication_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSeriesEvent) GetKeyPrefix() []byte {
	if x != nil {
		return x.KeyPrefix
	}
	return nil
}

type DeleteRangeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyPrefix []byte `protobuf:"bytes,1,opt,name=key_prefix,json=keyPrefix,proto3" json:"key_prefix,omitempty"`
	StartTs   int64  `protobuf:"varint,2,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	EndTs     int64  `protobuf:"varint,3,opt,name=end_ts,json=endTs,proto3" json:"end_ts,omitempty"`
}

func (x *DeleteRangeEvent) Reset() {
	*x = DeleteRangeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_replication_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRangeEvent) ProtoMessage() {}

func (x *DeleteRangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_replication_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRangeEvent.ProtoReflect.Descriptor instead.
func (*DeleteRangeEvent) Descriptor() ([]byte, []int) {
	return file_api_v1_replication_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRangeEvent) GetKeyPrefix() []byte {
	if x != nil {
		return x.KeyPrefix
	}
	return nil
}

func (x *DeleteRangeEvent) GetStartTs() int64 {
	if x != nil {
		return x.StartTs
	}
	return 0
}

func (x *DeleteRangeEvent) GetEndTs() int64 {
	if x != nil {
		return x.EndTs
	}
	return 0
}

type SnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SnapshotRequest) Reset() {
	*x = SnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_replication_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRequest) ProtoMessage() {}

func (x *SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_replication_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRequest.ProtoReflect.Descriptor instead.
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_replication_proto_rawDescGZIP(), []int{8}
}

type SnapshotChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Relative path within the snapshot directory.
	// e.g., "sst/000001.sst", "MANIFEST", "string_mapping.log"
	FilePathRelative string `protobuf:"bytes,1,opt,name=file_path_relative,json=filePathRelative,proto3" json:"file_path_relative,omitempty"`
	Content          []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SnapshotChunk) Reset() {
	*x = SnapshotChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_replication_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotChunk) ProtoMessage() {}

func (x *SnapshotChunk) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_replication_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotChunk.ProtoReflect.Descriptor instead.
func (*SnapshotChunk) Descriptor() ([]byte, []int) {
	return file_api_v1_replication_proto_rawDescGZIP(), []int{9}
}

func (x *SnapshotChunk) GetFilePathRelative() string {
	if x != nil {
		return x.FilePathRelative
	}
	return ""
}

func (x *SnapshotChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_api_v1_replication_proto protoreflect.FileDescriptor

var file_api_v1_replication_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x15, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x15, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x10, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x57, 0x41, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x14, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x84, 0x01, 0x0a, 0x13, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x37,
	0x0a, 0x18, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x77, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x15, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x57, 0x61, 0x6c, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x94, 0x03, 0x0a, 0x08, 0x57, 0x41, 0x4c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x11, 0x77, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x77, 0x61, 0x6c, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x75, 0x74,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x70, 0x75, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x52, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xdb,
	0x01, 0x0a, 0x08, 0x50, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x38, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1f, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x32, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x22, 0x63, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x65, 0x6e, 0x64, 0x54, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x0d, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x32, 0xe4, 0x02, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x57, 0x41, 0x4c, 0x12, 0x22, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x57, 0x41, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x41,
	0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x21, 0x2e, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x2e, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x49, 0x4e, 0x4c, 0x4f, 0x70, 0x65, 0x6e, 0x2f,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x3b, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_replication_proto_rawDescOnce sync.Once
	file_api_v1_replication_proto_rawDescData = file_api_v1_replication_proto_rawDesc
)

func file_api_v1_replication_proto_rawDescGZIP() []byte {
	file_api_v1_replication_proto_rawDescOnce.Do(func() {
		file_api_v1_replication_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_replication_proto_rawDescData)
	})
	return file_api_v1_replication_proto_rawDescData
}

var file_api_v1_replication_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_v1_replication_proto_goTypes = []interface{}{
	(*ReportProgressRequest)(nil), // 0: nexusbase.api.v1.ReportProgressRequest
	(*StreamWALRequest)(nil),      // 1: nexusbase.api.v1.StreamWALRequest
	(*LatestStateResponse)(nil),   // 2: nexusbase.api.v1.LatestStateResponse
	(*WALEntry)(nil),              // 3: nexusbase.api.v1.WALEntry
	(*PutEvent)(nil),              // 4: nexusbase.api.v1.PutEvent
	(*DeleteEvent)(nil),           // 5: nexusbase.api.v1.DeleteEvent
	(*DeleteSeriesEvent)(nil),     // 6: nexusbase.api.v1.DeleteSeriesEvent
	(*DeleteRangeEvent)(nil),      // 7: nexusbase.api.v1.DeleteRangeEvent
	(*SnapshotRequest)(nil),       // 8: nexusbase.api.v1.SnapshotRequest
	(*SnapshotChunk)(nil),         // 9: nexusbase.api.v1.SnapshotChunk
	nil,                           // 10: nexusbase.api.v1.PutEvent.TagsEntry
	(*emptypb.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_api_v1_replication_proto_depIdxs = []int32{
	4,  // 0: nexusbase.api.v1.WALEntry.put_event:type_name -> nexusbase.api.v1.PutEvent
	5,  // 1: nexusbase.api.v1.WALEntry.delete_event:type_name -> nexusbase.api.v1.DeleteEvent
	6,  // 2: nexusbase.api.v1.WALEntry.delete_series_event:type_name -> nexusbase.api.v1.DeleteSeriesEvent
	7,  // 3: nexusbase.api.v1.WALEntry.delete_range_event:type_name -> nexusbase.api.v1.DeleteRangeEvent
	10, // 4: nexusbase.api.v1.PutEvent.tags:type_name -> nexusbase.api.v1.PutEvent.TagsEntry
	1,  // 5: nexusbase.api.v1.ReplicationService.StreamWAL:input_type -> nexusbase.api.v1.StreamWALRequest
	11, // 6: nexusbase.api.v1.ReplicationService.GetLatestState:input_type -> google.protobuf.Empty
	8,  // 7: nexusbase.api.v1.ReplicationService.GetSnapshot:input_type -> nexusbase.api.v1.SnapshotRequest
	0,  // 8: nexusbase.api.v1.ReplicationService.ReportProgress:input_type -> nexusbase.api.v1.ReportProgressRequest
	3,  // 9: nexusbase.api.v1.ReplicationService.StreamWAL:output_type -> nexusbase.api.v1.WALEntry
	2,  // 10: nexusbase.api.v1.ReplicationService.GetLatestState:output_type -> nexusbase.api.v1.LatestStateResponse
	9,  // 11: nexusbase.api.v1.ReplicationService.GetSnapshot:output_type -> nexusbase.api.v1.SnapshotChunk
	11, // 12: nexusbase.api.v1.ReplicationService.ReportProgress:output_type -> google.protobuf.Empty
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_v1_replication_proto_init() }
func file_api_v1_replication_proto_init() {
	if File_api_v1_replication_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_replication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_replication_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamWALRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_replication_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_replication_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WALEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_replication_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_replication_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_replication_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSeriesEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_replication_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRangeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_replication_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_replication_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_replication_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*WALEntry_PutEvent)(nil),
		(*WALEntry_DeleteEvent)(nil),
		(*WALEntry_DeleteSeriesEvent)(nil),
		(*WALEntry_DeleteRangeEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_replication_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_replication_proto_goTypes,
		DependencyIndexes: file_api_v1_replication_proto_depIdxs,
		MessageInfos:      file_api_v1_replication_proto_msgTypes,
	}.Build()
	File_api_v1_replication_proto = out.File
	file_api_v1_replication_proto_rawDesc = nil
	file_api_v1_replication_proto_goTypes = nil
	file_api_v1_replication_proto_depIdxs = nil
}
